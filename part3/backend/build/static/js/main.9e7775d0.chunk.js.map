{"version":3,"sources":["components/Filter.js","components/PersonForm.js","components/Persons.js","components/Notification.js","services/persons.js","App.js","index.js"],"names":["Filter","handleFilterChange","onChange","PersonForm","newName","newNumber","handleNameChange","handleNumberChange","addPerson","onSubmit","value","type","Persons","persons","removePerson","filter","p","name","toLowerCase","includes","map","number","id","onClick","Notification","notification","className","message","baseUrl","axios","get","then","response","data","newObject","post","put","delete","App","useState","setPersons","setNewName","setNewNumber","newFilter","setNewFilter","setNotification","useEffect","peopleService","target","event","preventDefault","newPerson","trim","existingPerson","window","confirm","setTimeout","catch","err","concat","person","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9e7775d0.chunk.js","sourcesContent":["import React from 'react';\n\nconst Filter = ({ handleFilterChange }) => {\n  return (\n    <div>\n      Filter shown with: <input onChange={handleFilterChange} />\n    </div>\n  );\n};\n\nexport default Filter;\n","import React from 'react';\n\nconst PersonForm = ({\n  newName,\n  newNumber,\n  handleNameChange,\n  handleNumberChange,\n  addPerson,\n}) => {\n  return (\n    <form onSubmit={addPerson}>\n      <div>\n        Name: <input value={newName} onChange={handleNameChange} />\n      </div>\n      <div>\n        Number: <input value={newNumber} onChange={handleNumberChange} />\n      </div>\n\n      <div>\n        <button type='submit'>Add</button>\n      </div>\n    </form>\n  );\n};\n\nexport default PersonForm;\n","import React from 'react';\n\nconst Persons = ({ persons, removePerson, filter }) => {\n  return (\n    <div>\n      {persons\n        .filter((p) => p.name.toLowerCase().includes(filter.toLowerCase()))\n        .map(({ name, number, id }) => (\n          <p key={name}>\n            {name} {number}{' '}\n            <button onClick={() => removePerson(name, id)}>Remove</button>\n          </p>\n        ))}\n    </div>\n  );\n};\n\nexport default Persons;\n","const Notification = ({ notification }) => {\n\n  if (notification === null) return null;\n\n  return (\n    <div className={notification.type}> \n    {notification.message}\n    </div>\n    )\n}\n\nexport default Notification;","import axios from 'axios';\nconst baseUrl = '/api/persons';\n\nconst getAll = () => {\n  const request = axios.get(baseUrl);\n  return request.then((response) => response.data);\n};\n\nconst create = (newObject) => {\n  const request = axios.post(baseUrl, newObject);\n  return request.then((response) => response.data);\n};\n\nconst update = (id, newObject) => {\n  const request = axios.put(`${baseUrl}/${id}`, newObject);\n  return request.then((response) => response.data);\n};\n\nconst remove = (id) => {\n  const request = axios.delete(`${baseUrl}/${id}`);\n  return request.then((response) => response.data);\n};\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default { getAll, create, update, remove };\n","import React, { useState, useEffect } from 'react';\nimport './index.css';\n\nimport Filter from './components/Filter';\nimport PersonForm from './components/PersonForm';\nimport Persons from './components/Persons';\nimport Notification from './components/Notification';\nimport peopleService from './services/persons';\n\nconst App = () => {\n  const [persons, setPersons] = useState([]);\n  const [newName, setNewName] = useState('');\n  const [newNumber, setNewNumber] = useState('');\n  const [newFilter, setNewFilter] = useState('');\n  const [notification, setNotification] = useState(null);\n\n  const addPerson = (event) => {\n    event.preventDefault();\n\n    let newPerson = {\n      name: newName.trim(),\n      number: newNumber.trim(),\n    };\n\n    let existingPerson = persons.filter((p) => p.name === newPerson.name)[0];\n\n    if (existingPerson) {\n      if (\n        window.confirm(\n          `${existingPerson.name} is already added to phonebook, replace the old number with a new one?`\n        ) &&\n        newNumber !== ''\n      ) {\n        peopleService\n          .update(existingPerson.id, {\n            name: existingPerson.name,\n            number: newPerson.number,\n          })\n          .then((response) => {\n            setPersons(\n              persons.map((p) => (p.id !== existingPerson.id ? p : response))\n            );\n            setNotification({\n              message: `Updated ${existingPerson.name}!`,\n              type: 'success',\n            });\n            setTimeout(() => setNotification(null), 5000);\n          })\n          .catch((err) => {\n            setNotification({\n              message: `Information of ${existingPerson.name} has already been removed from server`,\n              type: 'error',\n            });\n          });\n      }\n    } else {\n      peopleService\n        .create({ name: newPerson.name, number: newPerson.number })\n        .then((response) => {\n          setPersons(persons.concat(response));\n          setNotification({\n            message: `Added ${response.name}!`,\n            type: 'success',\n          });\n          setTimeout(() => setNotification(null), 5000);\n        })\n        .catch((err) => {\n          setNotification({\n            message: `Error adding ${newPerson.name}!`,\n            type: 'error',\n          });\n        });\n    }\n    setNewName('');\n    setNewNumber('');\n  };\n\n  const removePerson = (name, id) => {\n    if (window.confirm(`Remove ${name} ?`)) {\n      peopleService\n        .remove(id)\n        .then(() => {\n          setPersons(persons.filter((person) => person.id !== id));\n          setNotification({ message: `Removed ${name}!`, type: 'success' });\n          setTimeout(() => setNotification(null), 5000);\n        })\n        .catch((err) => {\n          setNotification({\n            message: `Information of ${name} has already been removed from server`,\n            type: 'error',\n          });\n        });\n    }\n  };\n\n  const handleNameChange = ({ target }) => {\n    setNewName(target.value);\n  };\n\n  const handleNumberChange = ({ target }) => {\n    setNewNumber(target.value);\n  };\n\n  const handleFilterChange = ({ target }) => {\n    setNewFilter(target.value);\n  };\n\n  useEffect(() => peopleService.getAll().then((p) => setPersons(p)), []);\n\n  return (\n    <div>\n      <h1>Phonebook</h1>\n      <Notification notification={notification} />\n      <Filter handleFilterChange={handleFilterChange} />\n\n      <h2>Add a new</h2>\n      <PersonForm\n        newName={newName}\n        newNumber={newNumber}\n        handleNameChange={handleNameChange}\n        handleNumberChange={handleNumberChange}\n        addPerson={addPerson}\n      />\n\n      <h2>Numbers</h2>\n      <Persons\n        persons={persons}\n        removePerson={removePerson}\n        filter={newFilter}\n      />\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}